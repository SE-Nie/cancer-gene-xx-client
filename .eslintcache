[{"/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/index.js":"1","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/App.js":"2","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/reportWebVitals.js":"3","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/EnsgSearch.js":"4","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/GdcCategoryChoice.js":"5","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/GdcProjectChoice.js":"6","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/Profile.js":"7","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/ProfileManager.js":"8","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/LoginForm.js":"9","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/RegisterForm.js":"10","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/ProfileContext.js":"11"},{"size":747,"mtime":1610117273885,"results":"12","hashOfConfig":"13"},{"size":1056,"mtime":1610125548665,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1609156530198,"results":"15","hashOfConfig":"13"},{"size":2005,"mtime":1610046616777,"results":"16","hashOfConfig":"13"},{"size":2181,"mtime":1610046616778,"results":"17","hashOfConfig":"13"},{"size":1287,"mtime":1610046616778,"results":"18","hashOfConfig":"13"},{"size":2213,"mtime":1610128143054,"results":"19","hashOfConfig":"13"},{"size":2365,"mtime":1610125674610,"results":"20","hashOfConfig":"13"},{"size":1679,"mtime":1610123956658,"results":"21","hashOfConfig":"13"},{"size":2017,"mtime":1610118738595,"results":"22","hashOfConfig":"13"},{"size":842,"mtime":1610128225719,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1eazfj8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/index.js",[],["49","50"],"/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/App.js",["51"],"/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/reportWebVitals.js",[],"/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/EnsgSearch.js",["52"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function EnsgSearch() {\n  const [ensgNumber, setensgNumber] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [firstSearchResults, setFirstSearchResults] = useState([]);\n  const history = useHistory();\n\n  function getHgncId(input) {\n    fetch(`http://rest.genenames.org/search/${input}`, {\n      headers: { Accept: \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setFirstSearchResults(res.response.docs);\n      });\n  }\n\n  function getEnsgNumber(name) {\n    const url = `http://rest.genenames.org/fetch/hgnc_id/${name}`;\n    fetch(url, {\n      headers: { Accept: \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setensgNumber(res.response.docs[0].ensembl_gene_id);\n        history.push(res.response.docs[0].ensembl_gene_id);\n      });\n  }\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(inputValue);\n    getHgncId(inputValue);\n  };\n\n  const handleClick = (e) => {\n    console.log(e.target.value);\n    getEnsgNumber(e.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{ margin: \"60px\" }}>\n        <input\n          type=\"text\"\n          placeholder=\"Gene in any name\"\n          onChange={handleChange}\n          value={inputValue}\n        ></input>\n        <Button variant=\"primary\" type=\"submit\" style={{ marginLeft: \"10px\" }}>\n          Submit\n        </Button>\n      </form>\n      <ul>\n        {firstSearchResults.map((result) => (\n          <li key={result.hgnc_id}>\n            <Button\n              variant=\"primary\"\n              value={result.hgnc_id}\n              onClick={handleClick}\n            >\n              {result.symbol}\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/GdcCategoryChoice.js",["53"],"import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\n\nexport default function GdcCategoryChoice() {\n  const [gdcCategories, setGdcCategories] = useState([]);\n  const [uniqueCategories, setUniqueCategories] = useState([]);\n\n  function getGdcCategories() {\n    fetch(\"https://api.gdc.cancer.gov/v0/graphql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        query: `\n                query CaseFileCounts($filters: FiltersArgument) {\n                        projects {\n                          hits(first: 10, filters: $filters) {\n                            edges {\n                              node {\n                               project_id\n                                \n                                summary {\n                                  data_categories {\n                                    data_category\n                                    file_count\n                                  }\n                                }\n                              }\n                            }\n                        }\n                    } \n                      }`,\n        variables: {\n          filters: {\n            op: \"=\",\n            content: { field: \"project_id\", value: [\"TCGA*\"] },\n          },\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setGdcCategories(res.data.projects.hits.edges);\n      });\n  }\n\n  useEffect(() => {\n    getGdcCategories();\n  }, []);\n\n  useEffect(() => {\n    showCategories();\n  }, [gdcCategories]);\n\n  function showCategories() {\n    let helperSet = new Set();\n    gdcCategories.map((category) =>\n      category.node.summary.data_categories.map((subcategory) =>\n        helperSet.add(subcategory.data_category)\n      )\n    );\n\n    setUniqueCategories(Array.from(helperSet));\n  }\n\n  if (uniqueCategories) {\n    return (\n      <>\n        <ul>\n          {uniqueCategories.map((category) => (\n            <li key={category}>{category}</li>\n          ))}\n        </ul>\n      </>\n    );\n  } else {\n    return <h1>loading available GDC projects...</h1>;\n  }\n}\n","/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/GdcProjectChoice.js",[],"/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/Profile.js",["54","55","56","57","58"],"/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/ProfileManager.js",["59"],"/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/LoginForm.js",["60"],"/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/Components/RegisterForm.js",[],"/Users/anacaballero/Desktop/wbs/FinalProject/cancer-gene-xx-client/src/ProfileContext.js",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":17,"column":6,"nodeType":"68","endLine":17,"endColumn":8,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":6,"column":10,"nodeType":"72","messageId":"73","endLine":6,"endColumn":20},{"ruleId":"66","severity":1,"message":"74","line":55,"column":6,"nodeType":"68","endLine":55,"endColumn":21,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"76","line":7,"column":10,"nodeType":"72","messageId":"73","endLine":7,"endColumn":20},{"ruleId":"70","severity":1,"message":"77","line":7,"column":22,"nodeType":"72","messageId":"73","endLine":7,"endColumn":35},{"ruleId":"70","severity":1,"message":"78","line":8,"column":10,"nodeType":"72","messageId":"73","endLine":8,"endColumn":23},{"ruleId":"70","severity":1,"message":"79","line":8,"column":25,"nodeType":"72","messageId":"73","endLine":8,"endColumn":41},{"ruleId":"66","severity":1,"message":"67","line":15,"column":6,"nodeType":"68","endLine":15,"endColumn":8,"suggestions":"80"},{"ruleId":"70","severity":1,"message":"81","line":1,"column":20,"nodeType":"72","messageId":"73","endLine":1,"endColumn":29},{"ruleId":"70","severity":1,"message":"82","line":1,"column":18,"nodeType":"72","messageId":"73","endLine":1,"endColumn":28},{"ruleId":"70","severity":1,"message":"83","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":18},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkIfLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-unused-vars","'ensgNumber' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'showCategories'. Either include it or remove the dependency array.",["87"],"'emailValue' is assigned a value but never used.","'setEmailValue' is assigned a value but never used.","'passwordValue' is assigned a value but never used.","'setPasswordValue' is assigned a value but never used.",["88"],"'useEffect' is defined but never used.","'useContext' is defined but never used.","'Children' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"89","fix":"93"},"Update the dependencies array to be: [checkIfLoggedIn]",{"range":"94","text":"95"},"Update the dependencies array to be: [gdcCategories, showCategories]",{"range":"96","text":"97"},{"range":"98","text":"95"},[629,631],"[checkIfLoggedIn]",[1609,1624],"[gdcCategories, showCategories]",[544,546]]